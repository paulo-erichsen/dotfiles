[pack]
	threads = 4
	windowMemory = 100m
	packSizeLimit = 100m
[gc]
	agressiveWindow = 150
	auto = 0
[user]
	name = Paulo Fagundes
	useConfigOnly = true
[color]
	ui = true
	diff = true
[merge]
	ff = false
	tool = meld
[svn]
	pushmergeinfo = true
[alias]
	# does a `git up` on all ~/git/* repositories
	u = "!f() { \
		    for D in $(find $HOME/git -maxdepth 1 -mindepth 1 -type d | sort); do \
		      cd $D; \
		      echo \"$(tput setaf 6)>>> $(git remote -v | head -n1 | awk '{print $2}')$(tput sgr0)\"; \
		      git fetch --all --prune && git rebase --autostash FETCH_HEAD; \
		      git submodule update --init --recursive; \
		      [ $(git log --oneline origin/master..upstream/master 2>/dev/null | wc -l) = 0 ] || echo \"$(tput setaf 1)*** origin/master..upstream/master out of sync$(tput sgr0)\"; \
		      echo; \
		   done; \
	     }; f"
	f = fetch --all --prune
	co = "!f() { git checkout $1 && git pull --rebase; git submodule update --init --recursive; }; f"
	br = branch
	ci = commit
	st = status
	df = diff
	dc = diff --cached
	lg = log -p
	who = shortlog -s --
	nb = !sh -c 'git checkout -b $1 && git push -u origin $1' -
	db = !sh -c 'git branch -D $1 && git push --delete origin $1' -
	unstage = reset HEAD --
	last = log -1
	visual = !gitk
	tree = log --oneline --decorate --graph --all
	tagcleanup =  fetch --prune origin +refs/tags/*:refs/tags/* # removes local tags that are no longer on the remote repository
	gone = !git branch -D $(git branch -vv | grep gone | awk '{print $1}') # deletes branches that are 'gone'
	# http://railsware.com/blog/2013/09/19/taming-the-git-daemon-to-quickly-share-git-repository/
	serve = !git daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose # share, read-only
	hub = !git daemon --base-path=. --export-all --enable=receive-pack --reuseaddr --informative-errors --verbose # share, allow push
	# submodule aliases
	sdiff = "!git diff && git submodule foreach 'git diff'"
	spush = push --recurse-submodules=on-demand
	supdate = submodule update --remote --merge
	# sync your fork with upstream
	sync = !git checkout master && git pull --rebase origin master && git pull --rebase --prune upstream master && git submodule update --init --recursive
[core]
	editor = emacsclient -nw
	excludesfile = /home/paulo/.gitignore_global
	autocrlf = input
[push]
	default = simple
[log]
	date = local
[pull]
	rebase = true
[git-up "bundler"]
	check = true
[status]
	submodulesummary = 1
[rebase]
	autoStash = true
