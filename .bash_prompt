# Save and reload the history after each command finishes
# PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"

if command -v powerline-daemon &> /dev/null; then
    # powerline prompt
    # install with the following command:
    # if python was installed with brew: $(python3 -m pip install powerline-status)
    # else: $(python3 -m pip install --user powerline-status)
    powerline-daemon -q
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1
    pkg_path=powerline/bindings/bash/powerline.sh
    if [ -f /usr/share/powerline/bindings/bash/powerline.sh ]; then
        . /usr/share/$pkg_path
    else
        binding_path="$(pip3 show powerline-status | grep 'Location:' | awk '{ print $2 }')/$pkg_path"
        if [ -f $binding_path ]; then
            . $binding_path
        else
            echo "Could not find bash/powerline.sh location. Please verify ${BASH_SOURCE[0]}"
        fi
        unset binding_path
    fi
    unset pkg_path
elif command -v git &> /dev/null; then
    # git prompt
    export PROMPT_COMMAND='__git_ps1 "\[\033[01;34m\]\w\[\033[00m\]" "\[\033[01;36m\]$\[\033[00m\] "'
else
    # ubuntu default prompt

    # set variable identifying the chroot you work in (used in the prompt below)
    if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
        debian_chroot=$(cat /etc/debian_chroot)
    fi

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
        xterm-color|*-256color) color_prompt=yes;;
    esac

    # uncomment for a colored prompt, if the terminal has the capability; turned
    # off by default to not distract the user: the focus in a terminal window
    # should be on the output of commands, not on the prompt
    #force_color_prompt=yes

    if [ -n "$force_color_prompt" ]; then
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
            # We have color support; assume it's compliant with Ecma-48
            # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
            # a case would tend to support setf rather than setaf.)
            color_prompt=yes
        else
            color_prompt=
        fi
    fi

    if [ "$color_prompt" = yes ]; then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    else
        PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    fi
    unset color_prompt force_color_prompt

    # If this is an xterm set the title to user@host:dir
    case "$TERM" in
        xterm*|rxvt*)
            PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
            ;;
        *)
            ;;
    esac
fi
